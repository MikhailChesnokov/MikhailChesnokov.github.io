var programClass
var programStage
		
var elements = {
	"Н0101": "Наличие требований к программе по устойчивости функционирования при наличии ошибок во входных данных.",
	"Н0102": "Возможность обработки ошибочных ситуаций."
}
		
var subclasses = {
	"Устойчивость функционирования":[5011,5012,5013,5014,5015,5016,5017    ,504,505,506,509],
	"Работоспособность":			[5011,5012,5013,5014,5015,5016,5017,503,504,505,506,509],
	"Простота конструкции":			[5011,5012,5013,5014,5015,5016,5017,503,504,505,506,509],
	"Наглядность":					[5011,5012,5013,5014,5015,5016,5017    ,504,505,506,509],
	"Структурность":				[5011,5012,5013,5014,5015,5016,5017    ,504,505,506,509],
	"Повторяемость":				[5011,5012,5013,5014,5015,5016,5017,503,504,505,506,509]
}
	
var factors = {
	"Надежность":{
		"Устойчивость функционирования":{
			"Средства восстановления при ошибках на входе":["Н0101","Н0102"],
			"Средства восстановления при сбоях оборудования":[],
			"Реализация управления средствами восстановления":[]
		},
		"Работоспособность":{
			"Функционирование в заданных режимах":[],
			"Обеспеение обработки заданного объема информации":[]
		}
	},
	"Сопровождаемость": {
		"Простота конструкции":{
			"Простота архитектуры проекта":[],
			"Сложность архитектуры проекта":[],
			"Межмодульные связи":[],
			"Простота кодирования":[]
		},
		"Наглядность":{
			"Зкспертиза принятой системы идентификации":[],
			"Комментарии логики программ проекта":[],
			"Оформление текста программы":[]
		},
		"Структурность":{
			"Использование основных логиеских структур":[],
			"Соблюдение принципа нисходящего программирования":[],
			"Комментарии обоснования декомпозиции программ при кодировании":[]
		},
		"Повторяемость":{
			"Использование типовых компонентов ПС":[],
			"Использование типовых проектных решений":[]
		}
	}
}
	
$('#continueStartPage').click(function(evt) {
	//evt.preventDefault();
	programClass = $('#classSelector').val()
	programStage = $('#stageSelector').val()
	
	$('#startPage').remove()
	$('#inputDataPage').css('display', 'block')
	printAll()
});

function printAll() {
	for (factor in factors) {
		for (criterium in factors[factor]) {
			if (subclasses[criterium].indexOf(parseInt(programClass, 10)) != -1) {
				for (metrics in factors[factor][criterium]) {
					
					for (key in factors[factor][criterium][metrics]) {
						var elementCode = factors[factor][criterium][metrics][key];
						$('#inputDataPage').append(
						"<div>" + 
						"<p>" + elementCode
						 + " " +
						elements[elementCode] + 
						"</p>" + 
						"</div>")
					}
					
				}
			}
		}
	}
}